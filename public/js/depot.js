/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/depot.js":
/*!*******************************!*\
  !*** ./resources/js/depot.js ***!
  \*******************************/
/***/ (() => {

eval("var Toast = Swal.mixin({\n  icon: 'success',\n  showCloseButton: true,\n  toast: true,\n  position: 'center',\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  didOpen: function didOpen(toast) {\n    toast.addEventListener('mouseenter', Swal.stopTimer);\n    toast.addEventListener('mouseleave', Swal.resumeTimer);\n  }\n}); //Get all depots\n\n$('#depots-all').DataTable({\n  processing: true,\n  info: true,\n  \"language\": {\n    \"processing\": \"Przetwarzanie...\",\n    \"search\": \"Szukaj:\",\n    \"lengthMenu\": \"Pokaż _MENU_ pozycji\",\n    \"info\": \"Pozycje od _START_ do _END_ z _TOTAL_ łącznie\",\n    \"infoEmpty\": \"Pozycji 0 z 0 dostępnych\",\n    \"infoFiltered\": \"(filtrowanie spośród _MAX_ dostępnych pozycji)\",\n    \"loadingRecords\": \"Wczytywanie...\",\n    \"zeroRecords\": \"Nie znaleziono pasujących pozycji\",\n    \"paginate\": {\n      \"first\": \"Pierwsza\",\n      \"previous\": \"Poprzednia\",\n      \"next\": \"Następna\",\n      \"last\": \"Ostatnia\"\n    }\n  },\n  ajax: depotAllUrl,\n  columns: [{\n    data: 'id',\n    name: 'id'\n  }, {\n    data: 'name',\n    name: 'name'\n  }, {\n    data: 'city',\n    name: 'city'\n  },\n  /*{data:'map_link', name:'map_link'},*/\n\n  /*{data:'traffic', name:'traffic'},*/\n  {\n    data: 'actions',\n    name: 'actions'\n  }]\n}); //Create new depot\n\n$('#create-depot-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#depots-all').DataTable().ajax.reload(null, false);\n        $('.createDepot').modal('hide');\n        $('.createDepot').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n}); //Edit depot - get details\n\n$(document).on('click', '#editDepotBtn', function () {\n  var depot_id = $(this).data('id');\n  /*$('.editDepot').find('form')[0].reset();\n  $('.editDepot').find('span.error-text').text('');*/\n\n  $.post(depotGetUrl, {\n    depot_id: depot_id\n  }, function (data) {\n    $('.editDepot').find('input[name=\"cid_depot\"]').val(data.details.id);\n    $('.editDepot').find('input[name=\"name\"]').val(data.details.name);\n    $('.editDepot').find('input[name=\"city\"]').val(data.details.city);\n    $('.editDepot').modal('show');\n  }, 'json');\n}); //Update depot details\n\n$('#update-depot-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#depots-all').DataTable().ajax.reload(null, false);\n        $('.editDepot').modal('hide');\n        $('.editDepot').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n}); //Delete depot\n\n$(document).on('click', '#deleteDepotBtn', function () {\n  var depot_id = $(this).data('id');\n  var url = depotDeleteUrl;\n  Swal.fire({\n    title: 'Czy na pewno chcesz ususnąć depot z bazy danych?',\n    showDenyButton: true,\n    icon: 'question',\n    confirmButtonText: 'Tak, usuń',\n    confirmButtonColor: 'green',\n    denyButtonText: \"Anuluj\",\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.value) {\n      $.post(url, {\n        depot_id: depot_id\n      }, function (data) {\n        if (data.code == 1) {\n          $('#depots-all').DataTable().ajax.reload(null, false);\n\n          var _Toast = Swal.mixin({\n            icon: 'error',\n            showCloseButton: true,\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: function didOpen(toast) {\n              toast.addEventListener('mouseenter', Swal.stopTimer);\n              toast.addEventListener('mouseleave', Swal.resumeTimer);\n            }\n          });\n\n          _Toast.fire(data.msg);\n        } else {\n          Toast.fire(data.msg);\n        }\n      }, 'json');\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/depot.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/depot.js"]();
/******/ 	
/******/ })()
;