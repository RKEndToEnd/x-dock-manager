/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/ramp.js":
/*!******************************!*\
  !*** ./resources/js/ramp.js ***!
  \******************************/
/***/ (() => {

eval("var Toast = Swal.mixin({\n  icon: 'success',\n  showCloseButton: true,\n  toast: true,\n  position: 'center',\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  didOpen: function didOpen(toast) {\n    toast.addEventListener('mouseenter', Swal.stopTimer);\n    toast.addEventListener('mouseleave', Swal.resumeTimer);\n  }\n}); //Get all ramps\n\n$('#ramps-all').DataTable({\n  processing: true,\n  info: true,\n  ajax: rampAllUrl,\n  columns: [{\n    data: 'DT_RowIndex',\n    name: 'DT_RowIndex'\n  }, {\n    data: 'name',\n    name: 'name'\n  }, {\n    data: 'status',\n    name: 'stat.status'\n  }, {\n    data: 'power',\n    name: 'power'\n  }, {\n    data: 'actions',\n    name: 'actions'\n  }]\n}); //Create new ramp\n\n$('#create-ramp-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#ramps-all').DataTable().ajax.reload(null, false);\n        $('.createRamp').modal('hide');\n        $('.createRamp').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n}); //Delete ramp\n\n$(document).on('click', '#deleteRampBtn', function () {\n  var ramp_id = $(this).data('id');\n  var url = rampDeleteUrl;\n  Swal.fire({\n    title: 'Czy na pewno chcesz ususnąć rampę z bazy danych?',\n    showDenyButton: true,\n    icon: 'question',\n    confirmButtonText: 'Tak, usuń',\n    confirmButtonColor: 'green',\n    denyButtonText: \"Anuluj\",\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.value) {\n      $.post(url, {\n        ramp_id: ramp_id\n      }, function (data) {\n        if (data.code == 1) {\n          $('#ramps-all').DataTable().ajax.reload(null, false);\n\n          var _Toast = Swal.mixin({\n            icon: 'error',\n            showCloseButton: true,\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: function didOpen(toast) {\n              toast.addEventListener('mouseenter', Swal.stopTimer);\n              toast.addEventListener('mouseleave', Swal.resumeTimer);\n            }\n          });\n\n          _Toast.fire(data.msg);\n        } else {\n          Toast.fire(data.msg);\n        }\n      }, 'json');\n    }\n  });\n}); //Get ramp details\n\n$(document).on('click', '#statusRampBtn', function () {\n  var statusRamp_id = $(this).data('id');\n  $('.editRampStatus').find('form')[0].reset();\n  $('.editRampStatus').find('span.error-text').text('');\n  $.post(rampDetailUrl, {\n    statusRamp_id: statusRamp_id\n  }, function (data) {\n    $('.editRampStatus').find('input[name=\"cid_edit_ramp\"]').val(data.details.id);\n    $('.editRampStatus').find('input[name=\"name\"]').val(data.details.name);\n    $('.editRampStatus').find('select[name=\"status\"]').val(data.details.status);\n    $('.editRampStatus').find('select[name=\"power\"]').val(data.details.power);\n    $('.editRampStatus').modal('show');\n  }, 'json');\n}); //Update ramp details\n\n$('#edit-ramp-status-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#ramps-all').DataTable().ajax.reload(null, false);\n        $('.editRampStatus').modal('hide');\n        $('.editRampStatus').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/ramp.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/ramp.js"]();
/******/ 	
/******/ })()
;