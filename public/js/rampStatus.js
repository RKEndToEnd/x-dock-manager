/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/rampStatus.js":
/*!************************************!*\
  !*** ./resources/js/rampStatus.js ***!
  \************************************/
/***/ (() => {

eval("var Toast = Swal.mixin({\n  icon: 'success',\n  showCloseButton: true,\n  toast: true,\n  position: 'center',\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  didOpen: function didOpen(toast) {\n    toast.addEventListener('mouseenter', Swal.stopTimer);\n    toast.addEventListener('mouseleave', Swal.resumeTimer);\n  }\n}); //Get all ramp statuses\n\n$('#ramp-status-all').DataTable({\n  processing: true,\n  info: true,\n  ajax: statusAllUrl,\n  columns: [{\n    data: 'DT_RowIndex',\n    name: 'DT_RowIndex'\n  }, {\n    data: 'status',\n    name: 'status'\n  }, {\n    data: 'actions',\n    name: 'actions'\n  }]\n}); //Create new ramp status\n\n$('#create-status-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#ramp-status-all').DataTable().ajax.reload(null, false);\n        $('.createStatus').modal('hide');\n        $('.createStatus').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n}); //Delete ramp status\n\n$(document).on('click', '#deleteStatusBtn', function () {\n  var status_id = $(this).data('id');\n  var url = statusDeleteUrl;\n  Swal.fire({\n    title: 'Czy na pewno chcesz ususnąć status z bazy danych?',\n    showDenyButton: true,\n    icon: 'question',\n    confirmButtonText: 'Tak, usuń',\n    confirmButtonColor: 'green',\n    denyButtonText: \"Anuluj\",\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.value) {\n      $.post(url, {\n        status_id: status_id\n      }, function (data) {\n        if (data.code == 1) {\n          $('#ramp-status-all').DataTable().ajax.reload(null, false);\n\n          var _Toast = Swal.mixin({\n            icon: 'error',\n            showCloseButton: true,\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: function didOpen(toast) {\n              toast.addEventListener('mouseenter', Swal.stopTimer);\n              toast.addEventListener('mouseleave', Swal.resumeTimer);\n            }\n          });\n\n          _Toast.fire(data.msg);\n        } else {\n          Toast.fire(data.msg);\n        }\n      }, 'json');\n    }\n  });\n}); //Get status details\n\n$(document).on('click', '#editStatusBtn', function () {\n  var status_id = $(this).data('id');\n  $('.editStatus').find('form')[0].reset();\n  $('.editStatus').find('span.error-text').text('');\n  $.post(statusDetailUrl, {\n    status_id: status_id\n  }, function (data) {\n    $('.editStatus').find('input[name=\"cid_edit_status\"]').val(data.details.id);\n    $('.editStatus').find('input[name=\"status\"]').val(data.details.status);\n    $('.editStatus').modal('show');\n  }, 'json');\n}); //Update status details\n\n$('#edit-status-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#ramp-status-all').DataTable().ajax.reload(null, false);\n        $('.editStatus').modal('hide');\n        $('.editStatus').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/rampStatus.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/rampStatus.js"]();
/******/ 	
/******/ })()
;