/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/track.js":
/*!*******************************!*\
  !*** ./resources/js/track.js ***!
  \*******************************/
/***/ (() => {

eval("var Toast = Swal.mixin({\n  icon: 'success',\n  showCloseButton: true,\n  toast: true,\n  position: 'center',\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  didOpen: function didOpen(toast) {\n    toast.addEventListener('mouseenter', Swal.stopTimer);\n    toast.addEventListener('mouseleave', Swal.resumeTimer);\n  }\n}); //Get all tracks\n\n$('#tracks-all').DataTable({\n  processing: true,\n  info: false,\n  paging: false,\n  \"language\": {\n    \"search\": \"Szukaj:\"\n  },\n  ajax: trackAllUrl,\n  columns: [{\n    data: 'checkbox',\n    name: 'checkbox',\n    orderable: false,\n    searchable: false\n  }, {\n    data: 'vehicle_id',\n    name: 'vehicle_id'\n  }, {\n    data: 'track_id',\n    name: 'track_id'\n  }, {\n    data: 'track_type',\n    name: 'track_type'\n  }, {\n    data: 'freight',\n    name: 'freight'\n  }, {\n    data: 'eta',\n    name: 'eta'\n  }, {\n    data: 'docking_plan',\n    name: 'docking_plan'\n  }, {\n    data: 'area',\n    name: 'area',\n    orderable: false,\n    searchable: false\n  }, {\n    data: 'docked_at',\n    name: 'docked_at'\n  }, {\n    data: 'trace',\n    name: 'trace.name'\n  }, {\n    data: 'ids',\n    name: 'ids.worker_id'\n  }, {\n    data: 'task_start',\n    name: 'task_start'\n  }, {\n    data: 'task_end_exp',\n    name: 'task_end_exp'\n  }, {\n    data: 'doc_return_exp',\n    name: 'doc_return_exp'\n  }, {\n    data: 'task_end',\n    name: 'task_end'\n  }, {\n    data: 'doc_ready',\n    name: 'doc_ready'\n  }, {\n    data: 'comment',\n    name: 'comment'\n  }, {\n    data: 'actions',\n    name: 'actions',\n    orderable: false,\n    searchable: false\n  }]\n}).on('draw', function () {\n  $('input[name=\"track-checkbox\"]').each(function () {\n    this.checked = false;\n  });\n  $('input[name=\"tracks-checkbox\"]').prop('checked', false);\n  $('button#deleteAllMarkedBtn').addClass('d-none');\n}); //Table autorefresh\n\n/*setInterval(function (){\n    $('#tracks-all').DataTable().ajax.reload();\n},60000);*/\n//Create new track\n\n$('#create-track-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#tracks-all').DataTable().ajax.reload(null, false);\n        $('.createTrack').modal('hide');\n        $('.createTrack').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n}); //Import track from file - alert close\n\n$(document).ready(function () {\n  setTimeout(function () {\n    $(\"#al\").remove();\n  }, 8000);\n}); //Edit track - get details\n\n$(document).on('click', '#editTrackBtn', function () {\n  var track_id = $(this).data('id');\n  $('.editTrack').find('form')[0].reset();\n  $('.editTrack').find('span.error-text').text('');\n  $.post(trackGetUrl, {\n    track_id: track_id\n  }, function (data) {\n    $('.editTrack').find('input[name=\"cid_track\"]').val(data.details.id);\n    $('.editTrack').find('input[name=\"vehicle_id\"]').val(data.details.vehicle_id);\n    $('.editTrack').find('input[name=\"track_id\"]').val(data.details.track_id);\n    $('.editTrack').find('input[name=\"track_type\"]').val(data.details.track_type);\n    $('.editTrack').find('input[name=\"freight\"]').val(data.details.freight);\n    $('.editTrack').find('input[name=\"eta\"]').val(data.details.eta);\n    $('.editTrack').modal('show');\n  }, 'json');\n}); //Update track details\n\n$('#update-track-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#tracks-all').DataTable().ajax.reload(null, false);\n        $('.editTrack').modal('hide');\n        $('.editTrack').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n}); //Delete track\n\n$(document).on('click', '#deleteTrackBtn', function () {\n  var track_id = $(this).data('id');\n  var url = trackDeleteUrl;\n  Swal.fire({\n    title: 'Czy na pewno chcesz ususnąć trasę z bazy danych?',\n    showDenyButton: true,\n    icon: 'question',\n    confirmButtonText: 'Tak, usuń',\n    confirmButtonColor: 'green',\n    denyButtonText: \"Anuluj\",\n    allowOutsideClick: false\n  }).then(function (result) {\n    if (result.value) {\n      $.post(url, {\n        track_id: track_id\n      }, function (data) {\n        if (data.code == 1) {\n          $('#tracks-all').DataTable().ajax.reload(null, false);\n          $('#ramp-schema').DataTable().ajax.reload(null, false);\n\n          var _Toast = Swal.mixin({\n            icon: 'error',\n            showCloseButton: true,\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: function didOpen(toast) {\n              toast.addEventListener('mouseenter', Swal.stopTimer);\n              toast.addEventListener('mouseleave', Swal.resumeTimer);\n            }\n          });\n\n          _Toast.fire(data.msg);\n        } else {\n          Toast.fire(data.msg);\n        }\n      }, 'json');\n    }\n  });\n}); //Checkbox marking\n\n$(document).on('click', 'input[name=\"tracks-checkbox\"]', function () {\n  if (this.checked) {\n    $('input[name=\"track-checkbox\"]').each(function () {\n      this.checked = true;\n    });\n  } else {\n    $('input[name=\"track-checkbox\"]').each(function () {\n      this.checked = false;\n    });\n  }\n\n  toggledeleteAllMarkedBtn();\n});\n$(document).on('change', 'input[name=\"track-checkbox\"]', function () {\n  if ($('input[name=\"track-checkbox\"]').length == $('input[name=\"track-checkbox\"]:checked').length) {\n    $('input[name=\"tracks-checkbox\"]').prop('checked', true);\n  } else {\n    $('input[name=\"tracks-checkbox\"]').prop('checked', false);\n  }\n\n  toggledeleteAllMarkedBtn();\n}); //deleteAllMarkedBtn hiding\n\nfunction toggledeleteAllMarkedBtn() {\n  if ($('input[name=\"track-checkbox\"]:checked').length > 0) {\n    $('button#deleteAllMarkedBtn').text('Usuń (' + $('input[name=\"track-checkbox\"]:checked').length + ')').removeClass('d-none');\n  } else {\n    $('button#deleteAllMarkedBtn').addClass('d-none');\n  }\n} //Deleting marked tracks\n\n\n$(document).on('click', 'button#deleteAllMarkedBtn', function () {\n  var checkedTracks = [];\n  $('input[name=\"track-checkbox\"]:checked').each(function () {\n    checkedTracks.push($(this).data('id'));\n  });\n  var url = trackBulkDeleteUrl;\n\n  if (checkedTracks.length > 0) {\n    Swal.fire({\n      title: 'Potwierdź!',\n      html: 'Czy na pewno usunąć zaznaczone <b>(' + checkedTracks.length + ')</b> trasy?',\n      showDenyButton: true,\n      icon: 'question',\n      confirmButtonText: 'Tak, usuń',\n      confirmButtonColor: 'green',\n      denyButtonText: \"Anuluj\",\n      allowOutsideClick: false\n    }).then(function (result) {\n      if (result.value) {\n        $.post(url, {\n          tracks_ids: checkedTracks\n        }, function (data) {\n          if (data.code == 1) {\n            $('#tracks-all').DataTable().ajax.reload(null, true);\n            $('#ramp-schema').DataTable().ajax.reload(null, false);\n\n            var _Toast2 = Swal.mixin({\n              icon: 'error',\n              showCloseButton: true,\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 3000,\n              timerProgressBar: true,\n              didOpen: function didOpen(toast) {\n                toast.addEventListener('mouseenter', Swal.stopTimer);\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\n              }\n            });\n\n            _Toast2.fire(data.msg);\n          }\n        }, 'json');\n      }\n    });\n  }\n}); //Super Admin edit data\n\n$(document).on('click', '#saEditTrackBtn', function () {\n  var track_id = $(this).data('id');\n  /*$('.saEditTrack').find('form')[0].reset();\n  $('.saEditTrack').find('span.error-text').text('');*/\n\n  $.post(saEditUrl, {\n    track_id: track_id\n  }, function (data) {\n    $('.saEditTrack').find('input[name=\"cid_sa_track\"]').val(data.details.id);\n    $('.saEditTrack').find('input[name=\"vehicle_id\"]').val(data.details.vehicle_id);\n    $('.saEditTrack').find('input[name=\"track_id\"]').val(data.details.track_id);\n    $('.saEditTrack').find('input[name=\"track_type\"]').val(data.details.track_type);\n    $('.saEditTrack').find('input[name=\"freight\"]').val(data.details.freight);\n    $('.saEditTrack').find('input[name=\"eta\"]').val(data.details.eta);\n    $('.saEditTrack').find('input[name=\"docking_plan\"]').val(data.details.docking_plan);\n    $('.saEditTrack').find('input[name=\"docked_at\"]').val(data.details.docked_at);\n    $('.saEditTrack').find('select[name=\"worker_id\"]').val(data.details.worker_id);\n    $('.saEditTrack').find('select[name=\"ramp\"]').val(data.details.ramp);\n    $('.saEditTrack').find('input[name=\"task_start\"]').val(data.details.task_start);\n    $('.saEditTrack').find('input[name=\"task_end_exp\"]').val(data.details.task_end_exp);\n    $('.saEditTrack').find('input[name=\"doc_return_exp\"]').val(data.details.doc_return_exp);\n    $('.saEditTrack').find('input[name=\"task_end\"]').val(data.details.task_end);\n    $('.saEditTrack').find('input[name=\"doc_ready\"]').val(data.details.doc_ready);\n    $('.saEditTrack').find('input[name=\"comment\"]').val(data.details.comment);\n    $('.saEditTrack').modal('show');\n  }, 'json');\n}); //Super Admin update track data\n\n$('#sa-update-track-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#tracks-all').DataTable().ajax.reload(null, false);\n        $('.saEditTrack').modal('hide');\n        $('.saEditTrack').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n}); //Get all ramps\n\n$('#ramp-schema').DataTable({\n  processing: false,\n  searching: false,\n  paging: false,\n  info: false,\n  ajax: rampAllUrl,\n  columns: [{\n    data: 'name',\n    name: 'name'\n  }]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/track.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/track.js"]();
/******/ 	
/******/ })()
;