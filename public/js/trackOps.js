/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/trackOps.js":
/*!**********************************!*\
  !*** ./resources/js/trackOps.js ***!
  \**********************************/
/***/ (() => {

eval("var Toast = Swal.mixin({\n  icon: 'info',\n  showCloseButton: true,\n  toast: true,\n  position: 'center',\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  didOpen: function didOpen(toast) {\n    toast.addEventListener('mouseenter', Swal.stopTimer);\n    toast.addEventListener('mouseleave', Swal.resumeTimer);\n  }\n}); //Docking track get data\n\n$(document).on('click', '#dockTrackBtn', function () {\n  var track_id = $(this).data('id');\n  $.post(dockDataUrl, {\n    track_id: track_id\n  }, function (data) {\n    $('.dockTrack').find('input[name=\"cid_dock_track\"]').val(data.details.id);\n    $('.dockTrack').find('input[name=\"vehicle_id\"]').val(data.details.vehicle_id);\n    $('.dockTrack').find('input[name=\"track_id\"]').val(data.details.track_id);\n    $('.dockTrack').find('input[name=\"ramp\"]').val(data.details.ramp);\n    $('.dockTrack').modal('show');\n  }, 'json');\n}); //Docking track update data\n\n$('#dock-track-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#tracks-all').DataTable().ajax.reload(null, false);\n        $('.dockTrack').modal('hide');\n        $('.dockTrack').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n}); //Load start track get data\n\n$(document).on('click', '#startTrackBtn', function () {\n  var track_id = $(this).data('id');\n  $.post(loadStartUrl, {\n    track_id: track_id\n  }, function (data) {\n    $('.loadStartTrack').find('input[name=\"cid_l_start_track\"]').val(data.details.id);\n    $('.loadStartTrack').find('input[name=\"vehicle_id\"]').val(data.details.vehicle_id);\n    $('.loadStartTrack').find('input[name=\"track_id\"]').val(data.details.track_id);\n    $('.loadStartTrack').find('input[name=\"ramp\"]').val(data.details.ramp);\n    $('.loadStartTrack').find('input[name=\"worker_id\"]').val(data.details.worker_id);\n    $('.loadStartTrack').modal('show');\n  }, 'json');\n}); //Load start track update data\n\n$('#load-start-track-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#tracks-all').DataTable().ajax.reload(null, false);\n        $('.loadStartTrack').modal('hide');\n        $('.loadStartTrack').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n}); //Load stop track get data\n\n$(document).on('click', '#stopTrackBtn', function () {\n  var track_id = $(this).data('id');\n  $.post(loadStopUrl, {\n    track_id: track_id\n  }, function (data) {\n    $('.loadStopTrack').find('input[name=\"cid_l_stop_track\"]').val(data.details.id);\n    $('.loadStopTrack').find('input[name=\"vehicle_id\"]').val(data.details.vehicle_id);\n    $('.loadStopTrack').find('input[name=\"track_id\"]').val(data.details.track_id);\n    $('.loadStopTrack').find('input[name=\"ramp\"]').val(data.details.ramp);\n    $('.loadStopTrack').find('input[name=\"worker_id\"]').val(data.details.worker_id);\n    $('.loadStopTrack').find('input[name=\"task_end_exp\"]').val(data.details.task_end_exp);\n    $('.loadStopTrack').modal('show');\n  }, 'json');\n}); //Load stop track update data\n\n$('#load-stop-track-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#tracks-all').DataTable().ajax.reload(null, false);\n        $('.loadStopTrack').modal('hide');\n        $('.loadStopTrack').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n}); //Documents ready data\n\n$(document).on('click', '#docReadyBtn', function () {\n  var track_id = $(this).data('id');\n  $.post(docReadyUrl, {\n    track_id: track_id\n  }, function (data) {\n    $('.docReady').find('input[name=\"cid_doc_ready\"]').val(data.details.id);\n    $('.docReady').find('input[name=\"vehicle_id\"]').val(data.details.vehicle_id);\n    $('.docReady').find('input[name=\"track_id\"]').val(data.details.track_id);\n    $('.docReady').find('input[name=\"ramp\"]').val(data.details.ramp);\n    $('.docReady').find('input[name=\"worker_id\"]').val(data.details.worker_id);\n    $('.docReady').find('input[name=\"eta\"]').val(data.details.eta);\n    $('.docReady').find('input[name=\"doc_return_exp\"]').val(data.details.doc_return_exp);\n    $('.docReady').find('input[name=\"comment\"]').val(data.details.comment);\n    $('.docReady').modal('show');\n  }, 'json');\n}); //Documents ready update data\n\n$('#doc-ready-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n        /*}else if(data.code == 2){\n            $('#tracks-all').DataTable().ajax.reload(null, false);\n            $('.docReady').modal('hide');\n            $('.docReady').find('form')[0].reset();*/\n      } else {\n        $('#tracks-all').DataTable().ajax.reload(null, false);\n        $('.docReady').modal('hide');\n        $('.docReady').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n}); //Departure track data\n\n$(document).on('click', '#departureTrackBtn', function () {\n  var track_id = $(this).data('id');\n  $.post(departureUrl, {\n    track_id: track_id\n  }, function (data) {\n    $('.departureTrack').find('input[name=\"cid_departure\"]').val(data.details.id);\n    $('.departureTrack').find('input[name=\"vehicle_id\"]').val(data.details.vehicle_id);\n    $('.departureTrack').find('input[name=\"track_id\"]').val(data.details.track_id);\n    $('.departureTrack').find('input[name=\"ramp\"]').val(data.details.ramp);\n    $('.departureTrack').find('input[name=\"worker_id\"]').val(data.details.worker_id);\n    $('.departureTrack').find('input[name=\"eta\"]').val(data.details.eta);\n    $('.departureTrack').find('input[name=\"doc_ready\"]').val(data.details.doc_ready);\n    $('.departureTrack').find('input[name=\"task_end\"]').val(data.details.task_end);\n    $('.departureTrack').find('input[name=\"comment\"]').val(data.details.comment);\n    $('.departureTrack').modal('show');\n  }, 'json');\n}); //Departure track update data\n\n$('#departure-form').on('submit', function (e) {\n  e.preventDefault();\n  var form = this;\n  $.ajax({\n    url: $(form).attr('action'),\n    method: $(form).attr('method'),\n    data: new FormData(form),\n    processData: false,\n    dataType: 'json',\n    contentType: false,\n    beforeSend: function beforeSend() {\n      $(form).find('span.error-text').text('');\n    },\n    success: function success(data) {\n      if (data.code == 0) {\n        $.each(data.error, function (prefix, val) {\n          $(form).find('span.' + prefix + '_error').text(val[0]);\n        });\n      } else {\n        $('#tracks-all').DataTable().ajax.reload(null, false);\n        $('.departureTrack').modal('hide');\n        $('.departureTrack').find('form')[0].reset();\n        Toast.fire(data.msg);\n      }\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/trackOps.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/trackOps.js"]();
/******/ 	
/******/ })()
;